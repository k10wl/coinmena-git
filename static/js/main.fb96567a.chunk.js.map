{"version":3,"sources":["store/repositories/index.ts","store/developers/index.ts","components/customHooks/useFetch.tsx","components/ui/BasePage/ListHeader/NavigationButton.tsx","components/ui/BasePage/ListHeader/index.tsx","components/ui/BasePage/ListContainer/index.tsx","components/customHooks/useCurrentPage.tsx","components/ui/BasePage/index.tsx","images/PopularRepo.svg","images/Repository.svg","components/ui/ListButton/index.tsx","pages/Developers/Content/index.tsx","pages/Developers/index.tsx","images/Fork.svg","images/Star.svg","pages/Repositories/Content/index.tsx","pages/Repositories/index.tsx","components/ui/Loading/index.tsx","App.tsx","store/index.ts","index.tsx"],"names":["repositories","createSlice","name","initialState","reducers","storeRepoData","_","action","payload","actions","storeDevData","useFetch","dispatch","useDispatch","proxyUrl","targetUrl","useQuery","a","fetch","data","json","response","console","error","repoIsLoading","isLoading","repoError","devIsLoading","devError","NavigationButtons","styled","Link","props","selected","Header","Mui","ListHeader","page","container","justifyContent","alignItems","NavigationButton","to","List","div","ListContainer","children","description","useCurrentPage","useState","currentPage","setCurrentPage","pathname","useLocation","useEffect","Container","BasePage","item","fontSize","fontFamily","fontWeight","color","marginY","xs","sm","lg","xl","ListButton","button","Ranking","ProfilePicture","ProfileName","type","Icon","img","spacing","RepoDescription","RepoLink","Content","developer","username","rank","url","popularRepository","avatar","id","href","src","alt","direction","repositoryName","PopularRepo","Repository","Developers","developers","useSelector","state","style","map","length","RepoNameContainer","AuthorAvatar","RepoDetail","RepoDetailsText","repositoryInfo","language","totalStars","forks","starsSince","builtBy","flexDirection","Star","marginTop","lineHeight","Fork","user","marginLeft","Repositories","repository","Loading","App","path","element","reducer","combineReducers","configureStore","queryClient","QueryClient","ReactDOM","render","client","store","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.fb96567a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst repositories = createSlice({\r\n  name: \"repositories\",\r\n  initialState: [],\r\n  reducers: {\r\n    storeRepoData: (_, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport default repositories;\r\n\r\nexport const { storeRepoData } = repositories.actions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst repositories = createSlice({\r\n  name: \"repositories\",\r\n  initialState: [],\r\n  reducers: {\r\n    storeDevData: (_, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport default repositories;\r\n\r\nexport const { storeDevData } = repositories.actions;\r\n","import { useQuery } from \"react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { storeRepoData } from \"@/store/repositories\";\r\nimport { storeDevData } from \"@/store/developers\";\r\n\r\nconst useFetch = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n  const targetUrl = \"https://gh-trending-api.herokuapp.com/\";\r\n\r\n  const { isLoading: repoIsLoading, error: repoError } = useQuery(\r\n    \"repoData\",\r\n    async () => {\r\n      try {\r\n        const data = await fetch(`${proxyUrl + targetUrl}repositories`);\r\n        const response = await data.json();\r\n        dispatch(storeRepoData(response));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  );\r\n\r\n  const { isLoading: devIsLoading, error: devError } = useQuery(\r\n    \"devData\",\r\n    async () => {\r\n      try {\r\n        const data = await fetch(`${proxyUrl + targetUrl}developers`);\r\n        const response = await data.json();\r\n        dispatch(storeDevData(response));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  );\r\n\r\n  const isLoading = devIsLoading === true || repoIsLoading === true;\r\n  const error =\r\n    !devError && !repoError ? false : devError ? \"devError\" : \"repoError\";\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  selected: boolean;\r\n}\r\n\r\nconst NavigationButtons = styled(Link)<Props>`\r\n  background-color: ${(props) => (props.selected ? \"#1f6feb\" : \"#161b22\")};\r\n  outline: none;\r\n  border: ${(props) =>\r\n    props.selected ? \"1px solid #1f6feb\" : \"1px solid #30363d;\"};\r\n\r\n  color: ${(props) => (props.selected ? \"#f0f6fc\" : \"#b4bcc3\")};\r\n  text-decoration: none;\r\n  font-family: Segoe UI;\r\n  font-style: 14px;\r\n  font-weight: 500px;\r\n  padding: 5px 10px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:first-child {\r\n    border-radius: 10px 0 0 10px;\r\n    border-right: none;\r\n  }\r\n  &:last-child {\r\n    border-radius: 0 10px 10px 0;\r\n    border-left: none;\r\n  }\r\n`;\r\n\r\nexport default NavigationButtons;\r\n","import React from \"react\";\r\n\r\nimport * as Mui from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\nimport NavigationButton from \"./NavigationButton\";\r\n\r\nimport { AvailablePages } from \"@hooks/useCurrentPage\";\r\n\r\nconst Header = styled(Mui.Grid)`\r\n  min-height: 50px;\r\n  padding: 10px 0;\r\n  border-bottom: none;\r\n  background-color: #161b22;\r\n`;\r\n\r\ninterface Props {\r\n  page: AvailablePages[\"page\"];\r\n}\r\n\r\nconst ListHeader = ({ page }: Props) => (\r\n  <Header container justifyContent=\"center\" alignItems=\"center\">\r\n    <NavigationButton to=\"/\" selected={page === \"Repositories\"}>\r\n      Repositories\r\n    </NavigationButton>\r\n    <NavigationButton to=\"/developers\" selected={page === \"Developers\"}>\r\n      Developers\r\n    </NavigationButton>\r\n  </Header>\r\n);\r\n\r\nexport default ListHeader;\r\n","import React from \"react\";\r\n\r\nimport * as Mui from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ListContainer = ({ children }: Props) => {\r\n  return (\r\n    <Mui.Grid container justifyContent=\"center\">\r\n      <List>{children}</List>\r\n    </Mui.Grid>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport interface AvailablePages {\r\n  page: \"Repositories\" | \"Developers\";\r\n  description:\r\n    | \"See what the GitHub community is most excited about today.\"\r\n    | \"These are the developers building the hot tools today.\";\r\n}\r\n\r\nconst repositories: AvailablePages = {\r\n  page: \"Repositories\",\r\n  description: \"See what the GitHub community is most excited about today.\",\r\n};\r\n\r\nconst description: AvailablePages = {\r\n  page: \"Developers\",\r\n  description: \"These are the developers building the hot tools today.\",\r\n};\r\n\r\nconst useCurrentPage = () => {\r\n  const [currentPage, setCurrentPage] = useState<AvailablePages>(repositories);\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    const strategy: { [key: string]: AvailablePages } = {\r\n      \"/\": repositories,\r\n      \"/developers\": description,\r\n    };\r\n\r\n    setCurrentPage(strategy[pathname]);\r\n  }, [pathname]);\r\n\r\n  return currentPage;\r\n};\r\n\r\nexport default useCurrentPage;\r\n","import React from \"react\";\r\n\r\nimport * as Mui from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ListHeader from \"@/components/ui/BasePage/ListHeader\";\r\nimport ListContainer from \"@/components/ui/BasePage/ListContainer\";\r\n\r\nimport useCurrentPage from \"@hooks/useCurrentPage\";\r\n\r\nconst Container = styled(Mui.Grid)`\r\n  background: #0d1117;\r\n  @media only screen and (max-width: 599px) {\r\n    background: #161b22;\r\n  }\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: auto;\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding: 25px 0;\r\n  background-color: #161b22;\r\n  border-bottom: 1px solid #30363d;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-height: 123px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst List = styled(Mui.Grid)`\r\n  border-radius: 7px;\r\n  border: 1px solid #30363d;\r\n  overflow: hidden;\r\n  @media only screen and (max-width: 599px) {\r\n    border-radius: 0;\r\n    border-right: 0;\r\n    border-left: 0;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst BasePage = ({ children }: Props) => {\r\n  const { page, description } = useCurrentPage();\r\n\r\n  return (\r\n    <Container container item>\r\n      <Header>\r\n        <Mui.Typography\r\n          fontSize={32}\r\n          fontFamily=\"Segoe UI\"\r\n          fontWeight={600}\r\n          color=\"#c9d1d9\"\r\n        >\r\n          Trending\r\n        </Mui.Typography>\r\n        <Mui.Typography\r\n          fontSize={16}\r\n          fontFamily=\"Segoe UI\"\r\n          fontWeight={400}\r\n          color=\"#8b949e\"\r\n        >\r\n          {description}\r\n        </Mui.Typography>\r\n      </Header>\r\n\r\n      <Mui.Grid container justifyContent=\"center\" marginY={3}>\r\n        <List item xs={12} sm={11} lg={10} xl={9}>\r\n          <ListHeader page={page} />\r\n          <ListContainer>{children}</ListContainer>\r\n        </List>\r\n      </Mui.Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BasePage;\r\n","export default __webpack_public_path__ + \"static/media/PopularRepo.129399df.svg\";","export default __webpack_public_path__ + \"static/media/Repository.9e5a728a.svg\";","import styled from \"styled-components\";\r\n\r\nconst ListButton = styled.button`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #21262d;\r\n  border: 1px solid #373b42;\r\n  color: #c9d1d9;\r\n  padding: 3px 12px;\r\n  border-radius: 5px;\r\n  img {\r\n    margin-right: 4px;\r\n  }\r\n  &:hover {\r\n    background-color: #30363d;\r\n    border-color: #8b949e;\r\n  }\r\n  &:active {\r\n    background-color: #282e33;\r\n    border-color: #6e7681;\r\n  }\r\n\r\n  @media screen and (max-width: 728px) {\r\n    span {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ListButton;\r\n","import React from \"react\";\r\n\r\nimport * as Mui from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\nimport PopularRepo from \"@images/PopularRepo.svg\";\r\nimport Repository from \"@images/Repository.svg\";\r\n\r\nimport ListButton from \"@/components/ui/ListButton\";\r\n\r\nimport DevelopersInterface from \"@/components/interface/developer\";\r\n\r\nconst Container = styled(Mui.Grid)`\r\n  padding: 15px;\r\n  border-bottom: 1px solid #21262d;\r\n`;\r\n\r\nconst Ranking = styled.a`\r\n  font-family: Segoe UI;\r\n  font-size: 12px;\r\n  font-weight: 400px;\r\n  color: #8b949e;\r\n  text-decoration: none;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst ProfilePicture = styled.div`\r\n  margin: 0 10px;\r\n  border-radius: 50%;\r\n  width: 48px;\r\n  height: 48px;\r\n  overflow: hidden;\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\ninterface ProfileNameProps {\r\n  type: \"name\" | \"username\";\r\n}\r\n\r\nconst ProfileName = styled.a<ProfileNameProps>`\r\n  font-family: Segoe UI;\r\n  font-size: ${({ type }) => (type === \"name\" ? \"20\" : \"16\")}px;\r\n  font-weight: ${({ type }) => (type === \"name\" ? \"600\" : \"400\")};\r\n  color: ${({ type }) => (type === \"name\" ? \"#58a6ff\" : \"#646c75\")};\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #58a6ff;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\ninterface IconProps {\r\n  spacing?: number;\r\n}\r\n\r\nconst Icon = styled.img<IconProps>`\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: ${(props) => props.spacing ?? 0}px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  vertical-align: text-bottom;\r\n`;\r\n\r\nconst RepoDescription = styled(Mui.Typography)`\r\n  font-family: Segoe UI;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #8b949e;\r\n`;\r\n\r\nconst RepoLink = styled.a`\r\n  color: #5198eb;\r\n  text-decoration: none;\r\n  font-family: Segoe UI;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  developer: DevelopersInterface;\r\n}\r\n\r\nconst Content = ({ developer }: Props) => {\r\n  const { username, name, rank, url, popularRepository, avatar } = developer;\r\n\r\n  return (\r\n    <Container container id={username}>\r\n      <Mui.Grid item xs={4}>\r\n        <Mui.Grid container>\r\n          <Ranking href={url}>{rank}</Ranking>\r\n          <ProfilePicture>\r\n            <a href={url}>\r\n              <img src={avatar} alt={name} />\r\n            </a>\r\n          </ProfilePicture>\r\n          <Mui.Grid item>\r\n            <Mui.Grid container direction=\"column\">\r\n              <ProfileName type=\"name\" href={url}>\r\n                {name}\r\n              </ProfileName>\r\n              <ProfileName type=\"username\" href={url}>\r\n                {username}\r\n              </ProfileName>\r\n            </Mui.Grid>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Grid>\r\n      <Mui.Grid item xs={8}>\r\n        <Mui.Grid container>\r\n          {popularRepository.repositoryName && (\r\n            <Mui.Grid item sm={9}>\r\n              <Mui.Grid container>\r\n                <Icon spacing={5} src={PopularRepo} alt=\"\" />\r\n                <RepoDescription\r\n                  marginY=\"5px\"\r\n                  fontSize=\"12px\"\r\n                  fontWeight={400}\r\n                  fontFamily=\"Segoe UI\"\r\n                >\r\n                  POPULAR REPO\r\n                </RepoDescription>\r\n              </Mui.Grid>\r\n              <Mui.Grid>\r\n                <RepoLink href={popularRepository.url}>\r\n                  <Icon spacing={5} src={Repository} alt=\"\" />{\" \"}\r\n                  {popularRepository.repositoryName}\r\n                </RepoLink>\r\n              </Mui.Grid>\r\n              <RepoDescription\r\n                marginY=\"5px\"\r\n                fontSize=\"12px\"\r\n                fontWeight={400}\r\n                fontFamily=\"Segoe UI\"\r\n              >\r\n                {/* Instead of description API returns `null` */}\r\n                {popularRepository.description}\r\n              </RepoDescription>\r\n            </Mui.Grid>\r\n          )}\r\n          <Mui.Grid item xs={12} sm={3}>\r\n            <Mui.Grid container justifyContent=\"flex-end\">\r\n              <ListButton>Follow</ListButton>\r\n            </Mui.Grid>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport BasePage from \"@/components/ui/BasePage\";\r\nimport Content from \"./Content\";\r\n\r\nimport { RootState } from \"@/store\";\r\n\r\ninterface Props {\r\n  error: string | boolean;\r\n}\r\n\r\nconst Developers = ({ error }: Props) => {\r\n  const { developers } = useSelector((state: RootState) => state);\r\n\r\n  return (\r\n    <BasePage>\r\n      {!error ? (\r\n        <>\r\n          {developers.map((developer) => (\r\n            <Content key={developer.username} developer={developer} />\r\n          ))}\r\n          {developers.length === 0 && (\r\n            <p style={{ color: \"#fff\" }}>\r\n              Something went wrong with API... check console for more info\r\n            </p>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p style={{ color: \"#fff\" }}>{error}</p>\r\n      )}\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Developers;\r\n","export default __webpack_public_path__ + \"static/media/Fork.f5844bf4.svg\";","export default __webpack_public_path__ + \"static/media/Star.bf32e479.svg\";","import React from \"react\";\r\n\r\nimport * as Mui from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Fork from \"@images/Fork.svg\";\r\nimport Star from \"@images/Star.svg\";\r\nimport Repository from \"@images/Repository.svg\";\r\n\r\nimport ListButton from \"@ui/ListButton\";\r\n\r\nimport RepositoryInterface from \"@/components/interface/repository\";\r\n\r\nconst Container = styled(Mui.Grid)`\r\n  padding: 15px;\r\n  border-bottom: 1px solid #21262d;\r\n`;\r\n\r\ninterface IconProps {\r\n  spacing?: number;\r\n}\r\n\r\nconst Icon = styled.img<IconProps>`\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: ${(props) => props.spacing || 0}px;\r\n`;\r\n\r\nconst RepoNameContainer = styled(Mui.Grid)`\r\n  cursor: pointer;\r\n  a {\r\n    color: #58a6ff;\r\n    font-family: Segoe UI;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n  }\r\n  &:hover {\r\n    a {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AuthorAvatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 20px;\r\n  width: 20px;\r\n  padding: 0 1px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RepoDetail = styled(Mui.Grid)`\r\n  display: flex;\r\n  margin: 2px 0;\r\n  padding-right: 16px;\r\n`;\r\n\r\nconst RepoDetailsText = styled(Mui.Typography)`\r\n  color: #8b949e;\r\n`;\r\n\r\ninterface Props {\r\n  repositoryInfo: RepositoryInterface;\r\n}\r\n\r\nconst Content = ({ repositoryInfo }: Props) => {\r\n  const {\r\n    username,\r\n    repositoryName,\r\n    url,\r\n    description,\r\n    language,\r\n    totalStars,\r\n    forks,\r\n    starsSince,\r\n    builtBy,\r\n  } = repositoryInfo;\r\n\r\n  return (\r\n    <Container container flexDirection=\"column\">\r\n      <Mui.Grid container justifyContent=\"space-between\">\r\n        <Mui.Grid item xs={10}>\r\n          <RepoNameContainer container alignItems=\"flex-end\">\r\n            <Icon spacing={4} src={Repository} alt=\"repository\" />\r\n            <a href={url}>\r\n              {username} / {repositoryName}\r\n            </a>\r\n          </RepoNameContainer>\r\n        </Mui.Grid>\r\n        <Mui.Grid item >\r\n          <ListButton>\r\n            <Icon spacing={2} src={Star} alt=\"star\" /> <span>Star</span>\r\n          </ListButton>\r\n        </Mui.Grid>\r\n      </Mui.Grid>\r\n      <RepoDetailsText marginY=\"4px\" fontSize=\"12px\" fontFamily=\"Segoe UI\">\r\n        {description}\r\n      </RepoDetailsText>\r\n      <Mui.Grid container marginTop=\"12px\">\r\n        <RepoDetail>\r\n          <RepoDetailsText\r\n            lineHeight={1.3}\r\n            fontSize=\"12px\"\r\n            fontFamily=\"Segoe UI\"\r\n          >\r\n            {language}\r\n          </RepoDetailsText>\r\n        </RepoDetail>\r\n        <RepoDetail>\r\n          <Icon spacing={2} src={Star} alt=\"star\" />\r\n          <RepoDetailsText\r\n            lineHeight={1.3}\r\n            fontSize=\"12px\"\r\n            fontFamily=\"Segoe UI\"\r\n          >\r\n            {totalStars}\r\n          </RepoDetailsText>\r\n        </RepoDetail>\r\n        <RepoDetail>\r\n          <Icon spacing={2} src={Fork} alt=\"fork\" />\r\n          <RepoDetailsText\r\n            lineHeight={1.3}\r\n            fontSize=\"12px\"\r\n            fontFamily=\"Segoe UI\"\r\n          >\r\n            {forks}\r\n          </RepoDetailsText>\r\n        </RepoDetail>\r\n        <RepoDetail>\r\n          <Mui.Grid item>\r\n            <Mui.Grid container>\r\n              <RepoDetailsText\r\n                lineHeight={1.3}\r\n                fontSize=\"12px\"\r\n                fontFamily=\"Segoe UI\"\r\n              >\r\n                Build by\r\n              </RepoDetailsText>\r\n              {builtBy.map((user) => (\r\n                <AuthorAvatar\r\n                  key={user.url}\r\n                  src={user.avatar}\r\n                  alt={user.username}\r\n                />\r\n              ))}\r\n            </Mui.Grid>\r\n          </Mui.Grid>\r\n        </RepoDetail>\r\n        <Mui.Grid item marginLeft=\"auto\">\r\n          <Mui.Grid container>\r\n            <Icon spacing={2} src={Star} alt=\"star\" />\r\n            <RepoDetailsText\r\n              lineHeight={1.3}\r\n              fontSize=\"12px\"\r\n              fontFamily=\"Segoe UI\"\r\n            >\r\n              {starsSince} stars today\r\n            </RepoDetailsText>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport BasePage from \"@ui/BasePage\";\r\nimport Container from \"./Content\";\r\n\r\nimport { RootState } from \"@/store\";\r\n\r\ninterface Props {\r\n  error: string | boolean;\r\n}\r\n\r\nconst Repositories = ({ error }: Props) => {\r\n  const { repositories } = useSelector((state: RootState) => state);\r\n\r\n  return (\r\n    <BasePage>\r\n      {!error ? (\r\n        <>\r\n          {repositories.map((repository) => (\r\n            <Container key={repository.url} repositoryInfo={repository} />\r\n          ))}\r\n          {repositories.length === 0 && (\r\n            <p style={{ color: \"#fff\" }}>\r\n              Something went wrong with API... check console for more info{\" \"}\r\n            </p>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p style={{ color: \"#fff\" }}>{error}</p>\r\n      )}\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Repositories;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: #0d1117;\r\n  color: #c9d1d9;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h1 {\r\n    filter: blur(0px);\r\n  }\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Container>\r\n      <h1>Please wait for loading to complete</h1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport useFetch from \"@hooks/useFetch\";\r\n\r\nimport Developers from \"./pages/Developers\";\r\nimport Repositories from \"./pages/Repositories\";\r\nimport Loading from \"@ui/Loading\";\r\n\r\nconst App = () => {\r\n  const { isLoading, error } = useFetch();\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path=\"coinmena-git/\" element={<Repositories error={error} />} />\r\n        <Route path=\"coinmena-git/developers\" element={<Developers error={error} />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport repositories from \"./repositories\";\r\nimport developers from \"./developers\";\r\n\r\nimport RepositoryInterface from \"@/components/interface/repository\"\r\nimport DevelopersInterface from \"@/components/interface/developer\"\r\n\r\nexport interface RootState {\r\n  repositories: RepositoryInterface[];\r\n  developers: DevelopersInterface[];\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  repositories: repositories.reducer,\r\n  developers: developers.reducer,\r\n});\r\n\r\nexport default configureStore({\r\n  reducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport store from \"./store\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <QueryClientProvider client={queryClient}>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </QueryClientProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}